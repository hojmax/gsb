{"version":3,"sources":["components/Fire.js","components/RandomString.js","components/Connect.js","components/CopyLink.js","components/PlayerTable.js","components/Lobby.js","App.js","index.js"],"names":["Database","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","databaseURL","appId","database","getRandomString","len","chars","output","i","Math","floor","random","length","Connect","props","options","require","useState","lobbyCode","setLobbyCode","lobbyCodeError","setLobbyCodeError","userID","waitingForServer","setWaitingForServer","showContent","setShowContent","name","setName","inputName","setInputName","nameError","setNameError","useEffect","linkCode","window","location","search","substring","tryFirstContact","connect","key","ref","on","snapshot","exists","setLobby","server","val","local","setLobbyExists","once","Container","Row","className","InputGroup","style","maxWidth","FormControl","placeholder","onChange","event","target","value","maxLength","Append","Button","variant","onClick","trim","minLength","set","id","points","timePressed","pressed","onbeforeunload","remove","Fade","in","Alert","randomLobbyCode","players","hostID","kickAnnouncer","then","CopyLink","hasCopiedURL","setHasCopiedURL","width","url","size","document","getElementById","select","readOnly","text","el","createElement","setAttribute","position","left","body","appendChild","execCommand","removeChild","copyToClipboard","PlayerTable","data","isHost","lobby","positionDict","Object","values","filter","e","sort","a","b","forEach","playerTransitions","useTransition","item","config","duration","from","opacity","enter","leave","positionTransitions","map","x","getPositionTransition","element","pointer","indexOf","p","fontSize","interpolate","range","margin","getSettingsCell","ButtonGroup","disabled","lobbyExists","serverWait","setServerWait","updates","autoReset","update","undefined","tiedFirst","maxScore","reduce","acc","cur","Infinity","rows","score","tr","fontFamily","marginTop","Table","bordered","Settings","DropdownButton","top","right","title","Dropdown","Item","setAutoReset","showURL","Lobby","homeNav","href","lobbyURL","origin","pathname","Date","now","tryBuzzerPress","resetPlayersPressed","Spinner","animation","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.5df25859.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBB4VipmvlMioarIOzZ6t5YVjMZtS5weCc\",\n  authDomain: \"whopresseditfirst.firebaseapp.com\",\n  projectId: \"whopresseditfirst\",\n  storageBucket: \"whopresseditfirst.appspot.com\",\n  messagingSenderId: \"770192381932\",\n  databaseURL: \"https://whopresseditfirst-default-rtdb.europe-west1.firebasedatabase.app\",\n  appId: \"1:770192381932:web:e93a8754c60e180a39d2c9\"\n};\n\nconst Fire = firebase.initializeApp(firebaseConfig);\nconst Database = firebase.database();\n\nexport {\n  Fire, Database\n}","function getRandomString(len) {\n  let chars = [\n    \"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\n    \"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\n    \"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\n    \"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"\n  ]\n  let output = \"\"\n  for (let i = 0; i < len; i++) {\n    output += chars[Math.floor(Math.random() * chars.length)];\n  }\n  return output\n}\n\nexport default getRandomString","import React, { useState, useEffect } from 'react';\nimport { Database } from \"./Fire.js\"\nimport getRandomString from \"./RandomString.js\"\nimport { Button, InputGroup, FormControl, Row, Container, Alert, Fade } from 'react-bootstrap'\n\nfunction Connect(props) {\n  const options = require(\"./Options.json\")\n  const [lobbyCode, setLobbyCode] = useState(\"\")\n  const [lobbyCodeError, setLobbyCodeError] = useState(false)\n  const [userID, setUserID] = useState(getRandomString(16))\n  const [waitingForServer, setWaitingForServer] = useState(false)\n  const [showContent, setShowContent] = useState(false)\n  const [name, setName] = useState(\"\")\n  const [inputName, setInputName] = useState(false)\n  const [nameError, setNameError] = useState(false)\n  useEffect(() => {\n    const linkCode = window.location.search.substring(1, 9)\n    if (linkCode) {\n      tryFirstContact(linkCode)\n    } else {\n      setShowContent(true)\n    }\n  }, [])\n  const tryUploadingName = () => {\n    if (name.trim().length < options.name.minLength) {\n      setNameError(true)\n    } else {\n      if (!waitingForServer) {\n        setWaitingForServer(true)\n        Database.ref(`lobbies/_${lobbyCode}`).once(\"value\", (snapshot) => {\n          if (snapshot.exists()) {\n            Database.ref(`lobbies/_${lobbyCode}/players/${userID}`).set({ id: userID, name: name, points: 0, timePressed: 0, pressed: false })\n            // Database.ref(`lobbies/_${lobbyCode}/players/${userID}`).onDisconnect().remove()\n            // ** temp\n            window.onbeforeunload = function () {\n              Database.ref(`lobbies/_${lobbyCode}/players/${userID}`).remove()\n            }\n            // **\n            connect(lobbyCode)\n          } else {\n            window.location.search = window.location.search\n          }\n        })\n      }\n    }\n  }\n  const connect = (key) => {\n    Database.ref(`lobbies/_${key}`).on(\"value\", (snapshot) => {\n      if (snapshot.exists()) {\n        props.setLobby({ server: snapshot.val(), local: { lobbyCode: key, userID: userID } })\n      } else {\n        props.setLobbyExists(false)\n      }\n    })\n  }\n  const tryFirstContact = (key) => {\n    if (!waitingForServer) {\n      setWaitingForServer(true)\n      Database.ref(`lobbies/_${key}`).once(\"value\", (snapshot) => {\n        if (snapshot.exists()) {\n          setLobbyCode(key)\n          setInputName(true)\n          setWaitingForServer(false)\n        } else {\n          setLobbyCodeError(true)\n          setWaitingForServer(false)\n        }\n        setShowContent(true)\n      })\n    }\n  }\n  const createLobby = () => {\n    if (!waitingForServer) {\n      setWaitingForServer(true)\n      const randomLobbyCode = getRandomString(8)\n      Database.ref(`lobbies/_${randomLobbyCode}`).set({\n        players: [],\n        hostID: userID,\n        kickAnnouncer: \"\"\n      }).then(() => {\n        // Database.ref(`lobbies/_${randomLobbyCode}`).onDisconnect().remove()\n        window.onbeforeunload = function () {\n          Database.ref(`lobbies/_${randomLobbyCode}`).remove()\n        }\n        connect(randomLobbyCode)\n      })\n    }\n  }\n  if (!showContent) {\n    return <></>\n  }\n  if (inputName) {\n    return (<>\n      <Container>\n        <Row className=\"d-flex justify-content-center\">\n          <InputGroup style={{ maxWidth: \"270px\" }} className=\"mt-5\">\n            <FormControl\n              placeholder=\"Team Name\"\n              onChange={(event) => { setNameError(false); setName(event.target.value) }}\n              maxLength={options.name.maxLength} />\n            <InputGroup.Append>\n              <Button\n                variant=\"outline-primary\"\n                onClick={tryUploadingName}>\n                Enter\n              </Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Row>\n        <Fade in={nameError}>\n          <Row className=\"d-flex justify-content-center\"><Alert className=\"mt-3\" variant=\"danger\">{`The name is too short. The minimum length is ${options.name.minLength} characters.`}</Alert></Row>\n        </Fade>\n      </Container>\n    </>)\n  }\n  return (\n    <center>\n      <h1 className=\"mt-3\">Game Show Buzzer</h1>\n      <Button\n        variant=\"primary\"\n        onClick={createLobby}\n        className=\"mt-4\">\n        Create a new lobby\n      </Button>\n      {lobbyCodeError && <Row className=\"d-flex justify-content-center\"><Alert className=\"mt-3\" variant=\"danger\">The challenge link is invalid.</Alert></Row>}\n    </center>\n  )\n}\n\nexport default Connect;\n","import React, { useState } from 'react'\nimport { Button, InputGroup, FormControl } from 'react-bootstrap'\n\nconst copyToClipboard = (text) => {\n    const el = document.createElement('textarea');\n    el.value = text;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}\n\nfunction CopyLink(props) {\n    const [hasCopiedURL, setHasCopiedURL] = useState(false)\n    return (\n        <InputGroup style={{ width: (props.url.length - 3) + \"ch\" }} size='sm'>\n            <FormControl\n                id=\"formURL\"\n                value={props.url}\n                onClick={() => document.getElementById(\"formURL\").select()}\n                readOnly\n            />\n            <InputGroup.Append>\n                <Button\n                    onClick={(event) => { copyToClipboard(props.url); setHasCopiedURL(true); document.getElementById(\"formURL\").select() }}\n                    variant=\"outline-primary\">\n                    {<i className={hasCopiedURL ? \"fas fa-check\" : \"fas fa-link\"}></i>}\n                </Button>\n            </InputGroup.Append>\n        </InputGroup>\n    )\n}\n\nexport default CopyLink","import { Button, Table, Row, ButtonGroup } from 'react-bootstrap'\nimport { useTransition, animated } from \"react-spring\"\nimport { Database } from \"./Fire.js\"\n\nconst kick = (lobbyCode, id) => {\n    Database.ref(`lobbies/_${lobbyCode}/kickAnnouncer`).set(id)\n}\n\nfunction PlayerTable(data) {\n    const isHost = data.lobby.local.userID === data.lobby.server.hostID\n    const positionDict = {}\n    Object\n        .values(data.lobby.server.players)\n        .filter((e) => e.pressed)\n        .sort((a, b) => a.timePressed - b.timePressed)\n        .forEach((e, i) => positionDict[e.id] = i + 1)\n    const playerTransitions = useTransition(Object.values(data.lobby.server.players), item => item.id, {\n        config: { duration: 1000 },\n        from: { opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 },\n    })\n    const positionTransitions = useTransition(Object\n        .values(data.lobby.server.players)\n        .filter((e) => e.pressed)\n        .sort((a, b) => a.timePressed - b.timePressed)\n        .map((e, i) => { return { ...e, position: i + 1 } }), item => item.id, {\n        config: { duration: 200 },\n        from: { x: 0, opacity: 0 },\n        enter: { x: 1, opacity: 1 },\n        leave: { x: 1, opacity: 0 },\n    })\n    const getPositionTransition = (element) => {\n        const pointer = positionTransitions.map(e => e.item.id).indexOf(element.id)\n        if (pointer != -1) {\n            const e = positionTransitions[pointer]\n            return <animated.p key={e.key} style={{\n                fontSize: e.props.x\n                    .interpolate({\n                        range: [0, 0.5, 1],\n                        output: [5, 20, 16]\n                    })\n                    .interpolate(x => `${x}px`),\n                margin: 0,\n                opacity: e.props.opacity\n            }}>\n                {e.item.position}\n            </animated.p >\n        } else {\n            return null\n        }\n    }\n    const getSettingsCell = (item) => {\n        return <td className=\"text-center\">\n            <ButtonGroup size=\"sm\">\n                <Button variant=\"primary\"\n                    disabled={data.lobbyExists ? false : true}\n                    onClick={() => {\n                        if (!data.serverWait && data.lobby.server.players[item.id]) {\n                            data.setServerWait(true)\n                            let updates = {}\n                            if (data.autoReset) {\n                                Object.values(data.lobby.server.players).forEach((e) => {\n                                    updates[`lobbies/_${data.lobby.local.lobbyCode}/players/${e.id}/pressed`] = false\n                                })\n                            }\n                            updates[`lobbies/_${data.lobby.local.lobbyCode}/players/${item.id}/points`] = item.points + 1\n                            Database.ref().update(updates).then(() => {\n                                Database.ref(`lobbies/_${data.lobby.local.lobbyCode}/players/${item.id}`).once(\"value\").then((snapshot) => {\n                                    if (snapshot.val().id === undefined) {\n                                        Database.ref(`lobbies/_${data.lobby.local.lobbyCode}/players/${item.id}`).remove()\n                                    }\n                                })\n                                data.setServerWait(false)\n                            })\n                        }\n                    }}>\n                    <i className=\"fas fa-plus\"></i>\n                </Button>\n                {\" \"}\n                <Button variant=\"primary\"\n                    disabled={data.lobbyExists ? false : true}\n                    onClick={() => {\n                        if (!data.serverWait && data.lobby.server.players[item.id]) {\n                            data.setServerWait(true)\n                            Database.ref(`lobbies/_${data.lobby.local.lobbyCode}/players/${item.id}/points`).set(item.points - 1).then(() => data.setServerWait(false))\n                        }\n                    }}>\n                    <i className=\"fas fa-minus\"></i>\n                </Button>\n                {\" \"}\n                <Button variant=\"primary\"\n                    disabled={data.lobbyExists ? false : true}\n                    onClick={() => (data.lobby.server.players[item.id]) && kick(data.lobby.local.lobbyCode, item.id)}>\n                    <i className=\"fas fa-users-slash\"></i>\n                </Button>\n            </ButtonGroup>\n        </td>\n    }\n    let tiedFirst = false\n    const maxScore = Object.values(data.lobby.server.players)\n        .reduce((acc, cur) => {\n            if (cur.points > acc) {\n                tiedFirst = false\n                return cur.points\n            } else if (cur.points === acc) {\n                tiedFirst = true\n                return acc\n            } else {\n                return acc\n            }\n        }, -Infinity)\n    const getPointsField = (score) => {\n        if (score === maxScore) {\n            if (tiedFirst) {\n                return `${score}🤼‍♂️`\n            } else {\n                return `${score}🥇`\n            }\n        } else {\n            return score\n        }\n    } // style={{fontSize:\"16px\"}}\n    const rows = playerTransitions.map(({ item, props, key }, i) => {\n        if (item.id) {\n            return <animated.tr key={key} style={props} className={data.lobby.local.userID === item.id ? \"table-active\" : \"\"}>\n                <td>{getPositionTransition(item)}</td>\n                <td>{item.name}</td>\n                <td style={{ fontFamily: 'Roboto Mono' }}>{getPointsField(item.points)}</td>\n                {isHost && getSettingsCell(item)}\n            </animated.tr>\n        } else {\n            return undefined\n        }\n    })\n    return <Row style={{ maxWidth: \"500px\", marginTop: isHost ? \"60px\" : \"20px\" }} className=\"justify-content-center \">\n        <Table bordered>\n            <thead className=\"thead-dark\">\n                <tr>\n                    <th><i className=\"text-success fas fa-list-ol\"></i></th>\n                    <th><i className=\"text-primary fas fa-users\"></i></th>\n                    <th><i className=\"text-warning fas fa-star\"></i></th>\n                    {isHost && <th><i className=\"fas fa-users-cog\"></i></th>}\n                </tr>\n            </thead>\n            <tbody>\n                {rows}\n            </tbody>\n        </Table>\n    </Row>\n}\n\nexport default PlayerTable","import React, { useState, useEffect } from 'react'\nimport { Database } from \"./Fire.js\"\nimport CopyLink from \"./CopyLink.js\"\nimport { Button, Spinner, Container, Row, Alert, Fade, DropdownButton, Dropdown } from 'react-bootstrap'\nimport PlayerTable from \"./PlayerTable.js\"\n\nfunction Settings(props) {\n  return (\n    <DropdownButton disabled={props.lobbyExists ? false : true} style={{ margin: 0, position: \"absolute\", top: \"0px\", right: \"7px\" }} id=\"dropdown-basic-button\" className=\"float-right mt-2\" title={<i className=\"fas fa-cog\"></i>}>\n      <Dropdown.Item onClick={() => props.setAutoReset(!props.autoReset)}>Reset buzzers when adding points {props.autoReset ? <i className=\"far fa-toggle-on text-primary\"></i> : <i className=\"far fa-toggle-off text-primary\"></i>}</Dropdown.Item>\n      {props.showURL && <Dropdown.Item><CopyLink url={props.url} /></Dropdown.Item>}\n    </DropdownButton>\n  )\n}\n\nfunction Lobby(props) {\n  const [serverWait, setServerWait] = useState(false)\n  const [autoReset, setAutoReset] = useState(false)\n  const isHost = props.lobby.local.userID === props.lobby.server.hostID\n  useEffect(() => {\n    if (props.lobby.server.kickAnnouncer === props.lobby.local.userID) {\n      window.location.search = \"\"\n    }\n  }, [props.lobby.server.kickAnnouncer])\n  const resetPlayersPressed = () => {\n    if (props.lobby.server.players) {\n      let updates = {}\n      Object.values(props.lobby.server.players).forEach((e) => {\n        updates[`lobbies/_${props.lobby.local.lobbyCode}/players/${e.id}/pressed`] = false\n      })\n      Database.ref().update(updates)\n    }\n  }\n  const tryBuzzerPress = () => {\n    if (!serverWait && props.lobbyExists && !props.lobby.server.players[props.lobby.local.userID].pressed) {\n      setServerWait(true)\n      let updates = {}\n      updates[`lobbies/_${props.lobby.local.lobbyCode}/players/${props.lobby.local.userID}/timePressed`] = Date.now()\n      updates[`lobbies/_${props.lobby.local.lobbyCode}/players/${props.lobby.local.userID}/pressed`] = true\n      Database.ref().update(updates).then(() => setServerWait(false))\n    }\n  }\n  const hasPressedBuzzer = () => !props.lobby.server.players[props.lobby.local.userID].pressed\n  const homeNav = (\n    <Button\n      style={{ margin: 0, position: \"absolute\", top: \"0px\", left: \"7px\" }}\n      variant=\"primary\"\n      href=\"/gsb\"\n      className=\"mt-2\">\n      <i className=\"fas fa-home\"></i>\n    </Button>\n  )\n  const lobbyURL = window.location.origin + window.location.pathname + \"?\" + props.lobby.local.lobbyCode\n  return (<>\n    {isHost ? (\n      <>\n        {homeNav}\n        <Settings lobbyExists={props.lobbyExists} showURL={props.lobby.server.players} autoReset={autoReset} url={lobbyURL} setAutoReset={setAutoReset} />\n      </>\n    ) : homeNav\n    }\n    <Container>\n      <center>\n        {props.lobby.server.players ? (<>\n          {!isHost &&\n            <button\n              className={(hasPressedBuzzer() ? \"pressable\" : \"nonPressable\") + \" buzzer\"}\n              onClick={() => props.lobbyExists && tryBuzzerPress()}\n              style={{ marginTop: \"20px\" }}>\n            </button>}\n          <PlayerTable lobbyExists={props.lobbyExists} serverWait={serverWait} autoReset={autoReset} setServerWait={setServerWait} lobby={props.lobby} />\n          {isHost && <Button variant=\"dark\"\n            disabled={props.lobbyExists ? false : true}\n            onClick={() => props.lobbyExists && resetPlayersPressed()}>\n            Reset buzzers\n            </Button>}\n        </>) : (<>\n          <h2 style={{ marginTop: \"55px\" }}>Waiting for players.</h2>\n          <Spinner className=\"mb-5\" animation=\"border\" variant=\"primary\" />\n        </>)}\n        {!props.lobby.server.players && <CopyLink url={lobbyURL} />}\n        <Fade in={!props.lobbyExists}>\n          <Row className=\"d-flex justify-content-center\"><Alert className=\"mt-3\" variant=\"danger\">{isHost ? \"The lobby has expired.\" : \"The host has left the lobby.\"}</Alert></Row>\n        </Fade>\n      </center>\n    </Container>\n  </>)\n}\nexport default Lobby;\n","import React, { useState } from 'react';\nimport Connect from \"./components/Connect.js\"\nimport Lobby from \"./components/Lobby.js\"\nimport \"./App.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [lobby, setLobby] = useState(\"\")\n  const [lobbyExists, setLobbyExists] = useState(true)\n  if (lobby) {\n    return <Lobby lobbyExists={lobbyExists} lobby={lobby} />\n  } else {\n    return <Connect setLobbyExists={setLobbyExists} setLobby={setLobby} />\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}