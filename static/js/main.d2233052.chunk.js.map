{"version":3,"sources":["components/Fire.js","components/RandomString.js","components/Connect.js","components/CopyLink.js","components/Lobby.js","App.js","index.js"],"names":["Database","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","databaseURL","appId","database","getRandomString","len","chars","output","i","Math","floor","random","length","Connect","props","options","require","useState","lobbyCode","setLobbyCode","lobbyCodeError","setLobbyCodeError","userID","waitingForServer","setWaitingForServer","showContent","setShowContent","name","setName","inputName","setInputName","nameError","setNameError","useEffect","linkCode","window","location","search","substring","tryFirstContact","connect","key","ref","on","snapshot","exists","setLobby","server","val","local","setLobbyExists","once","Container","Row","className","InputGroup","style","maxWidth","FormControl","placeholder","onChange","event","target","value","maxLength","Append","Button","variant","onClick","trim","minLength","set","id","points","timePressed","pressed","onDisconnect","remove","Fade","in","Alert","randomLobbyCode","players","hostID","kickAnnouncer","then","CopyLink","hasCopiedURL","setHasCopiedURL","width","url","size","document","getElementById","select","readOnly","text","el","createElement","setAttribute","position","left","body","appendChild","execCommand","removeChild","copyToClipboard","Settings","DropdownButton","margin","top","right","title","Dropdown","Item","setAutoReset","autoReset","showURL","PlayerTable","data","isHost","lobby","positionDict","Object","values","filter","e","sort","a","b","forEach","playerTransitions","useTransition","item","config","duration","from","opacity","enter","leave","getSettingsCell","ButtonGroup","serverWait","lobbyExists","setServerWait","updates","update","tiedFirst","maxScore","reduce","acc","cur","Infinity","rows","map","score","tr","fontFamily","marginTop","Table","bordered","Lobby","homeNav","href","lobbyURL","origin","pathname","Date","now","tryBuzzerPress","resetPlayersPressed","Spinner","animation","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.d2233052.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBB4VipmvlMioarIOzZ6t5YVjMZtS5weCc\",\n  authDomain: \"whopresseditfirst.firebaseapp.com\",\n  projectId: \"whopresseditfirst\",\n  storageBucket: \"whopresseditfirst.appspot.com\",\n  messagingSenderId: \"770192381932\",\n  databaseURL: \"https://whopresseditfirst-default-rtdb.europe-west1.firebasedatabase.app\",\n  appId: \"1:770192381932:web:e93a8754c60e180a39d2c9\"\n};\n\nconst Fire = firebase.initializeApp(firebaseConfig);\nconst Database = firebase.database();\n\nexport {\n  Fire, Database\n}","function getRandomString(len) {\n  let chars = [\n    \"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\n    \"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\n    \"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\n    \"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"\n  ]\n  let output = \"\"\n  for (let i = 0; i < len; i++) {\n    output += chars[Math.floor(Math.random() * chars.length)];\n  }\n  return output\n}\n\nexport default getRandomString","import React, { useState, useEffect } from 'react';\nimport { Database } from \"./Fire.js\"\nimport getRandomString from \"./RandomString.js\"\nimport { Button, InputGroup, FormControl, Row, Container, Alert, Fade } from 'react-bootstrap'\n\nfunction Connect(props) {\n  const options = require(\"./Options.json\")\n  const [lobbyCode, setLobbyCode] = useState(\"\")\n  const [lobbyCodeError, setLobbyCodeError] = useState(false)\n  const [userID, setUserID] = useState(getRandomString(16))\n  const [waitingForServer, setWaitingForServer] = useState(false)\n  const [showContent, setShowContent] = useState(false)\n  const [name, setName] = useState(\"\")\n  const [inputName, setInputName] = useState(false)\n  const [nameError, setNameError] = useState(false)\n  useEffect(() => {\n    const linkCode = window.location.search.substring(1, 9)\n    if (linkCode) {\n      tryFirstContact(linkCode)\n    } else {\n      setShowContent(true)\n    }\n  }, [])\n  const tryUploadingName = () => {\n    if (name.trim().length < options.name.minLength) {\n      setNameError(true)\n    } else {\n      if (!waitingForServer) {\n        setWaitingForServer(true)\n        Database.ref(`lobbies/_${lobbyCode}`).once(\"value\", (snapshot) => {\n          if (snapshot.exists()) {\n            Database.ref(`lobbies/_${lobbyCode}/players/${userID}`).set({ id: userID, name: name, points: 0, timePressed: 0, pressed: false })\n            Database.ref(`lobbies/_${lobbyCode}/players/${userID}`).onDisconnect().remove()\n            connect(lobbyCode)\n          } else {\n            window.location.search = window.location.search\n          }\n        })\n      }\n    }\n  }\n  const connect = (key) => {\n    Database.ref(`lobbies/_${key}`).on(\"value\", (snapshot) => {\n      if (snapshot.exists()) {\n        props.setLobby({ server: snapshot.val(), local: { lobbyCode: key, userID: userID } })\n      } else {\n        props.setLobbyExists(false)\n      }\n    })\n  }\n  const tryFirstContact = (key) => {\n    if (!waitingForServer) {\n      setWaitingForServer(true)\n      Database.ref(`lobbies/_${key}`).once(\"value\", (snapshot) => {\n        if (snapshot.exists()) {\n          setLobbyCode(key)\n          setInputName(true)\n          setWaitingForServer(false)\n        } else {\n          setLobbyCodeError(true)\n          setWaitingForServer(false)\n        }\n        setShowContent(true)\n      })\n    }\n  }\n  const createLobby = () => {\n    if (!waitingForServer) {\n      setWaitingForServer(true)\n      const randomLobbyCode = getRandomString(8)\n      Database.ref(`lobbies/_${randomLobbyCode}`).set({\n        players: [],\n        hostID: userID,\n        kickAnnouncer: \"\"\n      }).then(() => {\n          Database.ref(`lobbies/_${randomLobbyCode}`).onDisconnect().remove()\n        connect(randomLobbyCode)\n      })\n    }\n  }\n  if (!showContent) {\n    return <></>\n  }\n  if (inputName) {\n    return (<>\n      <Container>\n        <Row className=\"d-flex justify-content-center\">\n          <InputGroup style={{ maxWidth: \"270px\" }} className=\"mt-5\">\n            <FormControl\n              placeholder=\"Team Name\"\n              onChange={(event) => { setNameError(false); setName(event.target.value) }}\n              maxLength={options.name.maxLength} />\n            <InputGroup.Append>\n              <Button\n                variant=\"outline-primary\"\n                onClick={tryUploadingName}>\n                Enter\n              </Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Row>\n        <Fade in={nameError}>\n          <Row className=\"d-flex justify-content-center\"><Alert className=\"mt-3\" variant=\"danger\">{`The name is too short. The minimum length is ${options.name.minLength} characters.`}</Alert></Row>\n        </Fade>\n      </Container>\n    </>)\n  }\n  return (\n    <center>\n      <h1 className=\"mt-3\">Game Show Buzzer</h1>\n      <Button\n        variant=\"primary\"\n        onClick={createLobby}\n        className=\"mt-4\">\n        Create a new lobby\n      </Button>\n      {lobbyCodeError && <Row className=\"d-flex justify-content-center\"><Alert className=\"mt-3\" variant=\"danger\">The challenge link is invalid.</Alert></Row>}\n    </center>\n  )\n}\n\nexport default Connect;\n","import React, { useState } from 'react'\nimport { Button, InputGroup, FormControl } from 'react-bootstrap'\n\nconst copyToClipboard = (text) => {\n    const el = document.createElement('textarea');\n    el.value = text;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}\n\nfunction CopyLink(props) {\n    const [hasCopiedURL, setHasCopiedURL] = useState(false)\n    return (\n        <InputGroup style={{ width: (props.url.length - 3) + \"ch\" }} size='sm'>\n            <FormControl\n                id=\"formURL\"\n                value={props.url}\n                onClick={() => document.getElementById(\"formURL\").select()}\n                readOnly\n            />\n            <InputGroup.Append>\n                <Button\n                    onClick={(event) => { copyToClipboard(props.url); setHasCopiedURL(true); document.getElementById(\"formURL\").select() }}\n                    variant=\"outline-primary\">\n                    {<i className={hasCopiedURL ? \"fas fa-check\" : \"fas fa-link\"}></i>}\n                </Button>\n            </InputGroup.Append>\n        </InputGroup>\n    )\n}\n\nexport default CopyLink","import React, { useState, useEffect } from 'react'\nimport { Database } from \"./Fire.js\"\nimport CopyLink from \"./CopyLink.js\"\nimport { Button, Spinner, Nav, Table, Container, Row, Alert, ButtonGroup, Fade, DropdownButton, Dropdown, Col, Form } from 'react-bootstrap'\nimport { useTransition, animated } from \"react-spring\"\n\nconst kick = (lobbyCode, id) => {\n  Database.ref(`lobbies/_${lobbyCode}/kickAnnouncer`).set(id)\n}\n\nfunction Settings(props) {\n  return (\n    <DropdownButton style={{ margin: 0, position: \"absolute\", top: \"0px\", right: \"7px\" }} id=\"dropdown-basic-button\" className=\"float-right mt-2\" title={<i className=\"fas fa-cog\"></i>}>\n      <Dropdown.Item onClick={() => props.setAutoReset(!props.autoReset)}>Reset buzzers when adding points {props.autoReset ? <i className=\"far fa-toggle-on text-primary\"></i> : <i className=\"far fa-toggle-off text-primary\"></i>}</Dropdown.Item>\n      {props.showURL && <Dropdown.Item><CopyLink url={props.url} /></Dropdown.Item>}\n    </DropdownButton>\n  )\n}\n\nfunction PlayerTable(data) {\n  const isHost = data.lobby.local.userID === data.lobby.server.hostID\n  const positionDict = {}\n  Object\n    .values(data.lobby.server.players)\n    .filter((e) => e.pressed)\n    .sort((a, b) => a.timePressed - b.timePressed)\n    .forEach((e, i) => positionDict[e.id] = i + 1)\n  const playerTransitions = useTransition(Object.values(data.lobby.server.players), item => item.id, {\n    config: { duration: 1000 },\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n  })\n  const getSettingsCell = (item) => {\n    return <td className=\"text-center\">\n      <ButtonGroup size=\"sm\">\n        <Button variant=\"primary\"\n          onClick={() => {\n            if (!data.serverWait && data.lobby.server.players[item.id] && data.lobbyExists) {\n              data.setServerWait(true)\n              let updates = {}\n              if (data.autoReset) {\n                Object.values(data.lobby.server.players).forEach((e) => {\n                  updates[`lobbies/_${data.lobby.local.lobbyCode}/players/${e.id}/pressed`] = false\n                })\n              }\n              updates[`lobbies/_${data.lobby.local.lobbyCode}/players/${item.id}/points`] = item.points + 1\n              Database.ref().update(updates).then(() => data.setServerWait(false))\n            }\n          }}>\n          <i className=\"fas fa-plus\"></i>\n        </Button>\n        {\" \"}\n        <Button variant=\"primary\"\n          onClick={() => {\n            if (!data.serverWait && data.lobby.server.players[item.id] && data.lobbyExists) {\n              data.setServerWait(true)\n              Database.ref(`lobbies/_${data.lobby.local.lobbyCode}/players/${item.id}/points`).set(item.points - 1).then(() => data.setServerWait(false))\n            }\n          }}>\n          <i className=\"fas fa-minus\"></i>\n        </Button>\n        {\" \"}\n        <Button variant=\"primary\"\n          onClick={() => (data.lobby.server.players[item.id] && data.lobbyExists) && kick(data.lobby.local.lobbyCode, item.id)}>\n          <i className=\"fas fa-users-slash\"></i>\n        </Button>\n      </ButtonGroup>\n    </td>\n  }\n  let tiedFirst = false\n  const maxScore = Object.values(data.lobby.server.players)\n    .reduce((acc, cur) => {\n      if (cur.points > acc) {\n        tiedFirst = false\n        return cur.points\n      } else if (cur.points == acc) {\n        tiedFirst = true\n        return acc\n      } else {\n        return acc\n      }\n    }, -Infinity)\n  const getPointsField = (score) => {\n    if (score == maxScore) {\n      if (tiedFirst) {\n        return `${score}🤼‍♂️`\n      } else {\n        return `${score}🥇`\n      }\n    } else {\n      return score\n    }\n  }\n  const rows = playerTransitions.map(({ item, props, key }, i) => {\n    return <animated.tr key={key} style={props} className={data.lobby.local.userID === item.id ? \"table-active\" : \"\"}>\n      <td>{item.pressed && positionDict[item.id]}</td>\n      <td>{item.name}</td>\n      <td style={{ fontFamily: 'Roboto Mono' }}>{getPointsField(item.points)}</td>\n      {isHost && getSettingsCell(item)}\n    </animated.tr>\n  })\n  return <Row style={{ maxWidth: \"500px\", marginTop: isHost ? \"60px\" : \"20px\" }} className=\"justify-content-center \">\n    <Table bordered>\n      <thead className=\"thead-dark\">\n        <tr>\n          <th><i className=\"text-success fas fa-list-ol\"></i></th>\n          <th><i className=\"text-primary fas fa-users\"></i></th>\n          <th><i className=\"text-warning fas fa-star\"></i></th>\n          {isHost && <th><i className=\"fas fa-users-cog\"></i></th>}\n        </tr>\n      </thead>\n      <tbody>\n        {rows}\n      </tbody>\n    </Table>\n  </Row>\n}\n\nfunction Lobby(props) {\n  const [serverWait, setServerWait] = useState(false)\n  const [autoReset, setAutoReset] = useState(false)\n  const isHost = props.lobby.local.userID === props.lobby.server.hostID\n  useEffect(() => {\n    if (props.lobby.server.kickAnnouncer === props.lobby.local.userID) {\n      window.location.search = \"\"\n    }\n  }, [props.lobby.server.kickAnnouncer])\n  const resetPlayersPressed = () => {\n    if (props.lobby.server.players) {\n      let updates = {}\n      Object.values(props.lobby.server.players).forEach((e) => {\n        updates[`lobbies/_${props.lobby.local.lobbyCode}/players/${e.id}/pressed`] = false\n      })\n      Database.ref().update(updates)\n    }\n  }\n  const tryBuzzerPress = () => {\n    if (!serverWait && props.lobbyExists && !props.lobby.server.players[props.lobby.local.userID].pressed) {\n      setServerWait(true)\n      let updates = {}\n      updates[`lobbies/_${props.lobby.local.lobbyCode}/players/${props.lobby.local.userID}/timePressed`] = Date.now()\n      updates[`lobbies/_${props.lobby.local.lobbyCode}/players/${props.lobby.local.userID}/pressed`] = true\n      Database.ref().update(updates).then(() => setServerWait(false))\n    }\n  }\n  const hasPressedBuzzer = () => !props.lobby.server.players[props.lobby.local.userID].pressed\n  const homeNav = (\n    <Button\n      style={{ margin: 0, position: \"absolute\", top: \"0px\", left: \"7px\" }}\n      variant=\"primary\"\n      href=\"/gsb\"\n      className=\"mt-2\">\n      <i className=\"fas fa-home\"></i>\n    </Button>\n  )\n  const lobbyURL = window.location.origin + window.location.pathname + \"?\" + props.lobby.local.lobbyCode\n  return (<>\n    {isHost ? (\n      <>\n        {homeNav}\n        <Settings showURL={props.lobby.server.players} autoReset={autoReset} url={lobbyURL} setAutoReset={setAutoReset} />\n      </>\n    ) : homeNav\n    }\n    <Container>\n      <center>\n        {props.lobby.server.players ? (<>\n          {!isHost &&\n            <button\n              className={(hasPressedBuzzer() ? \"pressable\" : \"nonPressable\") + \" buzzer\"}\n              onClick={() => props.lobbyExists && tryBuzzerPress()}\n              style={{ marginTop: \"20px\" }}>\n            </button>}\n          <PlayerTable serverWait={serverWait} autoReset={autoReset} setServerWait={setServerWait} lobby={props.lobby} />\n          {isHost && <Button variant=\"dark\" onClick={() => props.lobbyExists && resetPlayersPressed()}>Reset buzzers</Button>}\n          <Fade in={!props.lobbyExists}>\n            <Row className=\"d-flex justify-content-center\"><Alert className=\"mt-3\" variant=\"danger\">{isHost ? \"The lobby has expired.\" : \"The host has left the lobby.\"}</Alert></Row>\n          </Fade>\n        </>) : (<>\n          <h2 style={{ marginTop: \"55px\" }}>Waiting for players.</h2>\n          <Spinner className=\"mb-5\" animation=\"border\" variant=\"primary\" />\n        </>)}\n        {!props.lobby.server.players && <CopyLink url={lobbyURL} />}\n      </center>\n    </Container>\n  </>)\n}\nexport default Lobby;\n","import React, { useState } from 'react';\nimport Connect from \"./components/Connect.js\"\nimport Lobby from \"./components/Lobby.js\"\nimport \"./App.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [lobby, setLobby] = useState(\"\")\n  const [lobbyExists, setLobbyExists] = useState(true)\n  if (lobby) {\n    return <Lobby lobbyExists={lobbyExists} lobby={lobby} />\n  } else {\n    return <Connect setLobbyExists={setLobbyExists} setLobby={setLobby} />\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}