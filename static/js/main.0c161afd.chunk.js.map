{"version":3,"sources":["components/Fire.js","components/RandomString.js","components/Connect.js","components/CopyLink.js","components/Lobby.js","App.js","index.js"],"names":["Database","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","databaseURL","appId","database","getRandomString","len","chars","output","i","Math","floor","random","length","Connect","props","options","require","useState","lobbyCode","setLobbyCode","lobbyCodeError","setLobbyCodeError","userID","waitingForServer","setWaitingForServer","showContent","setShowContent","name","setName","inputName","setInputName","nameError","setNameError","useEffect","linkCode","window","location","search","substring","tryFirstContact","connect","key","ref","on","snapshot","exists","setLobby","server","val","local","setLobbyExists","once","Container","Row","className","InputGroup","style","maxWidth","FormControl","placeholder","onChange","event","target","value","maxLength","Append","Button","variant","onClick","trim","minLength","set","id","points","timePressed","pressed","onDisconnect","remove","Fade","in","Alert","randomLobbyCode","players","hostID","kickAnnouncer","then","CopyLink","hasCopiedURL","setHasCopiedURL","width","url","size","document","getElementById","select","readOnly","text","el","createElement","setAttribute","position","left","body","appendChild","execCommand","removeChild","copyToClipboard","PlayerTable","data","isHost","lobby","positionDict","Object","values","filter","e","sort","a","b","forEach","playerTransitions","useTransition","item","config","duration","from","opacity","enter","leave","getSettingsCell","class","ButtonGroup","serverWait","setServerWait","rows","map","tr","Table","striped","bordered","Lobby","Nav","activeKey","Item","Link","fontSize","href","lobbyExists","updates","Date","now","update","Spinner","animation","origin","pathname","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.0c161afd.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBB4VipmvlMioarIOzZ6t5YVjMZtS5weCc\",\n  authDomain: \"whopresseditfirst.firebaseapp.com\",\n  projectId: \"whopresseditfirst\",\n  storageBucket: \"whopresseditfirst.appspot.com\",\n  messagingSenderId: \"770192381932\",\n  databaseURL: \"https://whopresseditfirst-default-rtdb.europe-west1.firebasedatabase.app\",\n  appId: \"1:770192381932:web:e93a8754c60e180a39d2c9\"\n};\n\nconst Fire = firebase.initializeApp(firebaseConfig);\nconst Database = firebase.database();\n\nexport {\n  Fire, Database\n}","function getRandomString(len) {\n  let chars = [\n    \"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\n    \"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\n    \"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\n    \"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"\n  ]\n  let output = \"\"\n  for (let i = 0; i < len; i++) {\n    output += chars[Math.floor(Math.random() * chars.length)];\n  }\n  return output\n}\n\nexport default getRandomString","import React, { useState, useEffect } from 'react';\nimport { Database } from \"./Fire.js\"\nimport getRandomString from \"./RandomString.js\"\nimport { Button, InputGroup, FormControl, Row, Container, Alert, Fade } from 'react-bootstrap'\n\nfunction Connect(props) {\n  const options = require(\"./Options.json\")\n  const [lobbyCode, setLobbyCode] = useState(\"\")\n  const [lobbyCodeError, setLobbyCodeError] = useState(false)\n  const [userID, setUserID] = useState(getRandomString(16))\n  const [waitingForServer, setWaitingForServer] = useState(false)\n  const [showContent, setShowContent] = useState(false)\n  const [name, setName] = useState(\"\")\n  const [inputName, setInputName] = useState(false)\n  const [nameError, setNameError] = useState(false)\n  useEffect(() => {\n    const linkCode = window.location.search.substring(1, 9)\n    if (linkCode) {\n      tryFirstContact(linkCode)\n    } else {\n      setShowContent(true)\n    }\n  }, [])\n  const tryUploadingName = () => {\n    if (name.trim().length < options.name.minLength) {\n      setNameError(true)\n    } else {\n      Database.ref(`lobbies/_${lobbyCode}/players/${userID}`).set({ id: userID, name: name, points: 0, timePressed: 0, pressed: false })\n      Database.ref(`lobbies/_${lobbyCode}/players/${userID}`).onDisconnect().remove();\n      connect(lobbyCode)\n    }\n  }\n  const connect = (key) => {\n    Database.ref(`lobbies/_${key}`).on(\"value\", (snapshot) => {\n      if (snapshot.exists()) {\n        props.setLobby({ server: snapshot.val(), local: { lobbyCode: key, userID: userID } })\n      } else {\n        props.setLobbyExists(false)\n      }\n    })\n  }\n  const tryFirstContact = (key) => {\n    if (!waitingForServer) {\n      setWaitingForServer(true)\n      Database.ref(`lobbies/_${key}`).once(\"value\", (snapshot) => {\n        if (snapshot.exists()) {\n          setLobbyCode(key)\n          setInputName(true)\n        } else {\n          setLobbyCodeError(true)\n          setWaitingForServer(false)\n        }\n        setShowContent(true)\n      })\n    }\n  }\n  const createLobby = () => {\n    if (!waitingForServer) {\n      setWaitingForServer(true)\n      const randomLobbyCode = getRandomString(8)\n      Database.ref(`lobbies/_${randomLobbyCode}`).set({\n        players: [],\n        hostID: userID,\n        kickAnnouncer: \"\"\n      }).then(() => {\n        Database.ref(`lobbies/_${randomLobbyCode}`).onDisconnect().remove();\n        connect(randomLobbyCode)\n      })\n    }\n  }\n  if (!showContent) {\n    return <></>\n  }\n  if (inputName) {\n    return (<>\n      <Container>\n        <Row className=\"d-flex justify-content-center\">\n          <InputGroup style={{ maxWidth: \"270px\" }} className=\"mt-5\">\n            <FormControl\n              placeholder=\"Team Name\"\n              onChange={(event) => { setNameError(false); setName(event.target.value) }}\n              maxLength={options.name.maxLength} />\n            <InputGroup.Append>\n              <Button\n                variant=\"outline-primary\"\n                onClick={tryUploadingName}>\n                Enter\n              </Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Row>\n        <Fade in={nameError}>\n          <Row className=\"d-flex justify-content-center\"><Alert className=\"mt-3\" variant=\"danger\">{`The name is too short. The minimum length is ${options.name.minLength} characters.`}</Alert></Row>\n        </Fade>\n      </Container>\n    </>)\n  }\n  return (\n    <center>\n      <h1 className=\"mt-3\">Game Show Buzzer</h1>\n      <Button\n        variant=\"primary\"\n        onClick={createLobby}\n        className=\"mt-4\">\n        Create a new lobby\n      </Button>\n      {lobbyCodeError && <Row className=\"d-flex justify-content-center\"><Alert className=\"mt-3\" variant=\"danger\">The challenge link is invalid.</Alert></Row>}\n    </center>\n  )\n}\n\nexport default Connect;\n","import React, { useState } from 'react'\nimport { Button, InputGroup, FormControl } from 'react-bootstrap'\n\nconst copyToClipboard = (text) => {\n    const el = document.createElement('textarea');\n    el.value = text;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n}\n\nfunction CopyLink(props) {\n    const [hasCopiedURL, setHasCopiedURL] = useState(false)\n    return (\n        <InputGroup style={{ width: (props.url.length - 3) + \"ch\" }} size='sm'>\n            <FormControl\n                id=\"formURL\"\n                value={props.url}\n                onClick={() => document.getElementById(\"formURL\").select()}\n                readOnly\n            />\n            <InputGroup.Append>\n                <Button\n                    onClick={(event) => { copyToClipboard(props.url); setHasCopiedURL(true); document.getElementById(\"formURL\").select() }}\n                    variant=\"outline-primary\">\n                    {<i className={hasCopiedURL ? \"fas fa-check\" : \"fas fa-link\"}></i>}\n                </Button>\n            </InputGroup.Append>\n        </InputGroup>\n    )\n}\n\nexport default CopyLink","import React, { useState, useEffect } from 'react'\nimport { Database } from \"./Fire.js\"\nimport CopyLink from \"./CopyLink.js\"\nimport { Button, Spinner, Nav, Table, Container, Row, Alert, ButtonGroup, Fade } from 'react-bootstrap'\nimport { useTransition, animated } from \"react-spring\"\n\nconst kick = (lobbyCode, id) => {\n  Database.ref(`lobbies/_${lobbyCode}/kickAnnouncer`).set(id)\n}\n\nfunction PlayerTable(data) {\n  const isHost = data.lobby.local.userID === data.lobby.server.hostID\n  const positionDict = {}\n  Object\n    .values(data.lobby.server.players)\n    .filter((e) => e.pressed)\n    .sort((a, b) => a.timePressed - b.timePressed)\n    .forEach((e, i) => positionDict[e.id] = i + 1)\n  const playerTransitions = useTransition(Object.values(data.lobby.server.players), item => item.id, {\n    config: { duration: 1000 },\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n  })\n  const getSettingsCell = (item) => {\n    return <td class=\"text-center\">\n      <ButtonGroup size=\"sm\">\n        <Button variant=\"primary\"\n          onClick={() => {\n            if (!data.serverWait) {\n              data.setServerWait(true)\n              Database.ref(`lobbies/_${data.lobby.local.lobbyCode}/players/${item.id}/points`).set(item.points + 1).then(() => data.setServerWait(false))\n            }\n          }}>\n          <i className=\"fas fa-plus\"></i>\n        </Button>\n        {\" \"}\n        <Button variant=\"primary\"\n          onClick={() => {\n            if (!data.serverWait) {\n              data.setServerWait(true)\n              Database.ref(`lobbies/_${data.lobby.local.lobbyCode}/players/${item.id}/points`).set(item.points - 1).then(() => data.setServerWait(false))\n            }\n          }}>\n          <i className=\"fas fa-minus\"></i>\n        </Button>\n        {\" \"}\n        <Button variant=\"primary\"\n          onClick={() => kick(data.lobby.local.lobbyCode, item.id)}>\n          <i className=\"fas fa-users-slash\"></i>\n        </Button>\n      </ButtonGroup>\n    </td>\n  }\n  const rows = playerTransitions.map(({ item, props, key }, i) => {\n    return <animated.tr key={key} style={props}>\n      <td>{item.pressed && positionDict[item.id]}</td>\n      <td>{item.name}</td>\n      <td>{item.points}</td>\n      {isHost && getSettingsCell(item)}\n    </animated.tr>\n  })\n  return <Container>\n    <Row style={{ maxWidth: \"400px\" }} className=\"d-flex justify-content-center\">\n      <Table striped bordered>\n        <thead>\n          <tr>\n            <th><i className=\"text-success fas fa-list-ol\"></i></th>\n            <th><i className=\"text-secondary fas fa-users\"></i></th>\n            <th><i className=\"text-warning fas fa-star\"></i></th>\n            {isHost && <th><i className=\"fas fa-users-cog\"></i></th>}\n          </tr>\n        </thead>\n        <tbody>\n          {rows}\n        </tbody>\n      </Table>\n    </Row>\n  </Container>\n}\n\nfunction Lobby(props) {\n  const [serverWait, setServerWait] = useState(false)\n  const isHost = props.lobby.local.userID === props.lobby.server.hostID\n  useEffect(() => {\n    if (props.lobby.server.kickAnnouncer === props.lobby.local.userID) {\n      window.location.search = \"\"\n    }\n  }, [props.lobby.server.kickAnnouncer])\n  const resetPlayersPressed = () => {\n    if (props.lobby.server.players) {\n      let updates = {}\n      Object.values(props.lobby.server.players).forEach((e) => {\n        updates[`lobbies/_${props.lobby.local.lobbyCode}/players/${e.id}/pressed`] = false\n      })\n      Database.ref().update(updates)\n    }\n  }\n  const tryBuzzerPress = () => {\n    if (!serverWait && props.lobbyExists && !props.lobby.server.players[props.lobby.local.userID].pressed) {\n      setServerWait(true)\n      let updates = {}\n      updates[`lobbies/_${props.lobby.local.lobbyCode}/players/${props.lobby.local.userID}/timePressed`] = Date.now()\n      updates[`lobbies/_${props.lobby.local.lobbyCode}/players/${props.lobby.local.userID}/pressed`] = true\n      Database.ref().update(updates).then(() => setServerWait(false))\n    }\n  }\n  const hasPressedBuzzer = () => !props.lobby.server.players[props.lobby.local.userID].pressed\n  return (\n    <>\n      <Nav activeKey=\"\">\n        <Nav.Item>\n          <Nav.Link style={{ fontSize: \"22px\" }} href=\"/gsb\">Home</Nav.Link>\n        </Nav.Item>\n      </Nav>\n      <center>\n        {props.lobby.server.players ? (<>\n          {!isHost &&\n            <button\n              className={(hasPressedBuzzer() ? \"pressable\" : \"nonPressable\") + \" buzzer mb-4\"}\n              onClick={tryBuzzerPress}>\n            </button>}\n          <PlayerTable serverWait={serverWait} setServerWait={setServerWait} lobby={props.lobby} />\n          {isHost && <Button className=\"mb-5\" variant=\"secondary\" onClick={resetPlayersPressed}>Reset buzzers</Button>}\n          <Fade in={!props.lobbyExists}>\n            <Row className=\"d-flex justify-content-center\"><Alert className=\"mt-3\" variant=\"danger\">The host has left the lobby.</Alert></Row>\n          </Fade>\n        </>) : (<>\n          <h2>Waiting for players.</h2>\n          <Spinner className=\"mb-5\" animation=\"border\" variant=\"primary\" />\n        </>)}\n        {isHost && <CopyLink url={window.location.origin + window.location.pathname + \"?\" + props.lobby.local.lobbyCode} />}\n      </center>\n    </>\n  )\n}\nexport default Lobby;\n","import React, { useState } from 'react';\nimport Connect from \"./components/Connect.js\"\nimport Lobby from \"./components/Lobby.js\"\nimport \"./App.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [lobby, setLobby] = useState(\"\")\n  const [lobbyExists, setLobbyExists] = useState(true)\n  if (lobby) {\n    return <Lobby lobbyExists={lobbyExists} lobby={lobby} />\n  } else {\n    return <Connect setLobbyExists={setLobbyExists} setLobby={setLobby} />\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}