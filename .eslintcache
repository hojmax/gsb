[{"/Users/axelhojmark/Dropbox/CODE/REACT/gameshowbuzzer/src/index.js":"1","/Users/axelhojmark/Dropbox/CODE/REACT/gameshowbuzzer/src/App.js":"2","/Users/axelhojmark/Dropbox/CODE/REACT/gameshowbuzzer/src/components/Connect.js":"3","/Users/axelhojmark/Dropbox/CODE/REACT/gameshowbuzzer/src/components/Lobby.js":"4","/Users/axelhojmark/Dropbox/CODE/REACT/gameshowbuzzer/src/components/Fire.js":"5","/Users/axelhojmark/Dropbox/CODE/REACT/gameshowbuzzer/src/components/RandomString.js":"6","/Users/axelhojmark/Dropbox/CODE/REACT/gameshowbuzzer/src/components/CopyLink.js":"7"},{"size":153,"mtime":1609371355540,"results":"8","hashOfConfig":"9"},{"size":498,"mtime":1610821012302,"results":"10","hashOfConfig":"9"},{"size":4138,"mtime":1611954847513,"results":"11","hashOfConfig":"9"},{"size":7893,"mtime":1612002598379,"results":"12","hashOfConfig":"9"},{"size":583,"mtime":1610882629798,"results":"13","hashOfConfig":"9"},{"size":383,"mtime":1610454236088,"results":"14","hashOfConfig":"9"},{"size":1271,"mtime":1611736502723,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"4o7w7s",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/axelhojmark/Dropbox/CODE/REACT/gameshowbuzzer/src/index.js",[],["32","33"],"/Users/axelhojmark/Dropbox/CODE/REACT/gameshowbuzzer/src/App.js",[],"/Users/axelhojmark/Dropbox/CODE/REACT/gameshowbuzzer/src/components/Connect.js",["34","35","36"],"import React, { useState, useEffect } from 'react';\nimport { Database } from \"./Fire.js\"\nimport getRandomString from \"./RandomString.js\"\nimport { Button, InputGroup, FormControl, Row, Container, Alert, Fade } from 'react-bootstrap'\n\nfunction Connect(props) {\n  const options = require(\"./Options.json\")\n  const [lobbyCode, setLobbyCode] = useState(\"\")\n  const [lobbyCodeError, setLobbyCodeError] = useState(false)\n  const [userID, setUserID] = useState(getRandomString(16))\n  const [waitingForServer, setWaitingForServer] = useState(false)\n  const [showContent, setShowContent] = useState(false)\n  const [name, setName] = useState(\"\")\n  const [inputName, setInputName] = useState(false)\n  const [nameError, setNameError] = useState(false)\n  useEffect(() => {\n    const linkCode = window.location.search.substring(1, 9)\n    if (linkCode) {\n      tryFirstContact(linkCode)\n    } else {\n      setShowContent(true)\n    }\n  }, [])\n  const tryUploadingName = () => {\n    if (name.trim().length < options.name.minLength) {\n      setNameError(true)\n    } else {\n      if (!waitingForServer) {\n        setWaitingForServer(true)\n        Database.ref(`lobbies/_${lobbyCode}`).once(\"value\", (snapshot) => {\n          if (snapshot.exists()) {\n            Database.ref(`lobbies/_${lobbyCode}/players/${userID}`).set({ id: userID, name: name, points: 0, timePressed: 0, pressed: false })\n            Database.ref(`lobbies/_${lobbyCode}/players/${userID}`).onDisconnect().remove()\n            connect(lobbyCode)\n          } else {\n            window.location.search = window.location.search\n          }\n        })\n      }\n    }\n  }\n  const connect = (key) => {\n    Database.ref(`lobbies/_${key}`).on(\"value\", (snapshot) => {\n      if (snapshot.exists()) {\n        props.setLobby({ server: snapshot.val(), local: { lobbyCode: key, userID: userID } })\n      } else {\n        props.setLobbyExists(false)\n      }\n    })\n  }\n  const tryFirstContact = (key) => {\n    if (!waitingForServer) {\n      setWaitingForServer(true)\n      Database.ref(`lobbies/_${key}`).once(\"value\", (snapshot) => {\n        if (snapshot.exists()) {\n          setLobbyCode(key)\n          setInputName(true)\n          setWaitingForServer(false)\n        } else {\n          setLobbyCodeError(true)\n          setWaitingForServer(false)\n        }\n        setShowContent(true)\n      })\n    }\n  }\n  const createLobby = () => {\n    if (!waitingForServer) {\n      setWaitingForServer(true)\n      const randomLobbyCode = getRandomString(8)\n      Database.ref(`lobbies/_${randomLobbyCode}`).set({\n        players: [],\n        hostID: userID,\n        kickAnnouncer: \"\"\n      }).then(() => {\n          Database.ref(`lobbies/_${randomLobbyCode}`).onDisconnect().remove()\n        connect(randomLobbyCode)\n      })\n    }\n  }\n  if (!showContent) {\n    return <></>\n  }\n  if (inputName) {\n    return (<>\n      <Container>\n        <Row className=\"d-flex justify-content-center\">\n          <InputGroup style={{ maxWidth: \"270px\" }} className=\"mt-5\">\n            <FormControl\n              placeholder=\"Team Name\"\n              onChange={(event) => { setNameError(false); setName(event.target.value) }}\n              maxLength={options.name.maxLength} />\n            <InputGroup.Append>\n              <Button\n                variant=\"outline-primary\"\n                onClick={tryUploadingName}>\n                Enter\n              </Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Row>\n        <Fade in={nameError}>\n          <Row className=\"d-flex justify-content-center\"><Alert className=\"mt-3\" variant=\"danger\">{`The name is too short. The minimum length is ${options.name.minLength} characters.`}</Alert></Row>\n        </Fade>\n      </Container>\n    </>)\n  }\n  return (\n    <center>\n      <h1 className=\"mt-3\">Game Show Buzzer</h1>\n      <Button\n        variant=\"primary\"\n        onClick={createLobby}\n        className=\"mt-4\">\n        Create a new lobby\n      </Button>\n      {lobbyCodeError && <Row className=\"d-flex justify-content-center\"><Alert className=\"mt-3\" variant=\"danger\">The challenge link is invalid.</Alert></Row>}\n    </center>\n  )\n}\n\nexport default Connect;\n","/Users/axelhojmark/Dropbox/CODE/REACT/gameshowbuzzer/src/components/Lobby.js",["37"],"/Users/axelhojmark/Dropbox/CODE/REACT/gameshowbuzzer/src/components/Fire.js",[],"/Users/axelhojmark/Dropbox/CODE/REACT/gameshowbuzzer/src/components/RandomString.js",[],"/Users/axelhojmark/Dropbox/CODE/REACT/gameshowbuzzer/src/components/CopyLink.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":10,"column":18,"nodeType":"44","messageId":"45","endLine":10,"endColumn":27},{"ruleId":"46","severity":1,"message":"47","line":23,"column":6,"nodeType":"48","endLine":23,"endColumn":8,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":36,"column":38,"nodeType":"52","messageId":"53","endLine":36,"endColumn":60},{"ruleId":"46","severity":1,"message":"54","line":131,"column":6,"nodeType":"48","endLine":131,"endColumn":40,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'setUserID' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tryFirstContact'. Either include it or remove the dependency array.","ArrayExpression",["58"],"no-self-assign","'window.location.search' is assigned to itself.","MemberExpression","selfAssignment","React Hook useEffect has a missing dependency: 'props.lobby.local.userID'. Either include it or remove the dependency array.",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},"Update the dependencies array to be: [tryFirstContact]",{"range":"64","text":"65"},"Update the dependencies array to be: [props.lobby.local.userID, props.lobby.server.kickAnnouncer]",{"range":"66","text":"67"},[922,924],"[tryFirstContact]",[5103,5137],"[props.lobby.local.userID, props.lobby.server.kickAnnouncer]"]